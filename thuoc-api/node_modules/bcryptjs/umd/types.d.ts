const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');
const { validationResult } = require('express-validator');
const User = require('../models/User');

const JWT_SECRET = 'your_secret_key'; // Bạn đổi thành key bảo mật của riêng bạn

exports.register = (req, res) => {
  const errors = validationResult(req);
  if (!errors.isEmpty()) return res.status(400).json({ errors: errors.array() });

  const user = req.body;
  // Mã hóa mật khẩu
  user.tl_password = bcrypt.hashSync(user.tl_password, 10);

  User.create(user, (err) => {
    if (err) return res.status(500).json({ message: 'Lỗi tạo user', error: err });
    res.status(201).json({ message: 'Đăng ký thành công' });
  });
};

exports.login = (req, res) => {
  const { tl_email, tl_password } = req.body;

  if (!tl_email || !tl_password) {
    return res.status(400).json({ message: 'Email và mật khẩu là bắt buộc' });
  }

  User.getByEmail(tl_email, (err, users) => {
    if (err || users.length === 0) return res.status(401).json({ message: 'Email không tồn tại' });

    const user = users[0];
    // So sánh mật khẩu
    if (!bcrypt.compareSync(tl_password, user.tl_password)) {
      return res.status(401).json({ message: 'Mật khẩu không đúng' });
    }

    // Tạo JWT token
    const token = jwt.sign(
      { id: user.tl_mauser, role: user.tl_role },
      JWT_SECRET,
      { expiresIn: '1d' }
    );

    res.json({
      message: 'Đăng nhập thành công',
      token,
      user: {
        id: user.tl_mauser,
        username: user.tl_username,
        email: user.tl_email,
        fullname: user.tl_fullname,
        role: user.tl_role,
      }
    });
  });
};
